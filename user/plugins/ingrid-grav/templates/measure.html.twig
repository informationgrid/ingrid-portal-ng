{% extends 'partials/base.html.twig' %}

{% do assets.addCss('theme://css/measure.css', 98) %}

{% block content %}
    {% set measure_url = theme_var('measure.url') %}
    {% if measure_url starts with '/assets' %}
        {% set measure_url = base_url ~ measure_url %}
    {% endif %}
    {% set measure_url_elastic = theme_var('measure.elastic') %}
    {% set measure_networks_exclude = theme_var('measure.networks.exclude')|join('","') %}
    {% set measure_networks_initial = theme_var('measure.networks.initial')|join(',') %}
    {% set map_bg_wmts = theme_var('map.leaflet.bg.layer.wmts.url') %}
    {% set map_bg_attribution = theme_var('map.leaflet.bg.layer.attribution') %}

    <div class="embed-container">
        <iframe id="iframe_measure" src="{{ measure_url }}" allowfullscreen></iframe>
    </div>

    <script>
        var buffer = 0; //scroll bar buffer
        var iframe = document.getElementById('iframe_measure');
        var urlParams = location.hash;
        // define the URL for the elastic search requests
        var elasticSearchUrl = '{{ measure_url_elastic }}';

        var bgTileLayerUrl = '{{ map_bg_wmts }}';
        var bgTileLayerAttribution = '"{{ map_bg_attribution }}';

        // exclude networks which shall not be shown
        var excludeNetworks = ["{{ measure_networks_exclude }}"];

        // define initial network on init
        var initialNetworks = ["{{ measure_networks_initial }}"];

        // Add iFrame 'src'
        iframe.src = '{{ measure_url }}' + urlParams;

        // Change params
        function onParamChange(params) {
          window.history.pushState('', '', '#' + params );
        }
    </script>
{% endblock %}