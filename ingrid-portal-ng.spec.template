Name:           ingrid-portal-ng
Version:        @RPM_VERSION@
Release:        @RPM_RELEASE@%{?dist}
Summary:        InGrid Portal Next Generation
Group:          Applications/Internet
License:        Proprietary
URL:            https://www.wemove.com/
BuildArch:      noarch
Requires:       php >= 8.0
Requires:       php-fpm
Requires:       php-zip
Requires:       php-gd
Requires:       php-opcache
Requires:       php-xml
Requires:       php-dom
Requires:       php-yaml
Requires:       php-apcu
Requires:       git
Requires:       unzip
Requires:       rsync
Requires:       libzip
Requires:       libyaml
Requires:       libpng
Requires:       libjpeg
Requires:       libwebp
Requires:       libfreetype
Requires:       libxslt
Requires:       libxml2
Requires:       cron
Requires:       wget
Requires:       httpd-tools
Requires:       systemd
Requires:       curl
# Recommend a web server, but don't require a specific one
Recommends:     httpd
Recommends:     nginx

%description
InGrid Portal Next Generation - A modern portal based on Grav CMS.

%prep
# No prep needed

%build
# Download Grav CMS if not already included
GRAV_VERSION=1.7.48
curl -o grav-admin.zip -SL https://getgrav.org/download/core/grav-admin/${GRAV_VERSION}
unzip -qq grav-admin.zip -d /var/www -x "grav-admin/user/themes/*" -x "grav-admin/user/pages/*"
rm grav-admin.zip

%install
# Create directory structure
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng/var/www/html
mkdir -p %{buildroot}/etc/systemd/system
mkdir -p %{buildroot}/etc/profile.d

# Copy all files to the installation directory
cp -r * %{buildroot}/opt/ingrid/ingrid-portal-ng/
# Exclude the spec file itself
rm -f %{buildroot}/opt/ingrid/ingrid-portal-ng/ingrid-portal-ng.spec

# Create usr/share directory for Grav CMS
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng/usr/share
# Copy Grav CMS files
cp -r grav-admin %{buildroot}/opt/ingrid/ingrid-portal-ng/usr/share/

# Create systemd service file
cat > %{buildroot}/etc/systemd/system/ingrid-portal-ng.service << 'EOF'
[Unit]
Description=InGrid Portal Next Generation
After=network.target

[Service]
Type=forking
User=apache
Group=apache
WorkingDirectory=/opt/ingrid/ingrid-portal-ng
ExecStart=/opt/ingrid/ingrid-portal-ng/bin/start.sh
ExecStop=/opt/ingrid/ingrid-portal-ng/bin/stop.sh
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

# Create environment setup script
cat > %{buildroot}/etc/profile.d/ingrid-portal-ng.sh << 'EOF'
#!/bin/sh
export INGRID_PORTAL_HOME=/opt/ingrid/ingrid-portal-ng
EOF

# Create start script
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng/bin
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/start.sh << 'EOF'
#!/bin/sh
PORTAL_HOME=/opt/ingrid/ingrid-portal-ng
cd $PORTAL_HOME

# Set default environment variables
export THEME=${THEME:-ingrid}
export GRAV_FOLDER=${GRAV_FOLDER:-html}
export MVIS_VERSION=${MVIS_VERSION:-2.0.9}
export ENABLE_MVIS=${ENABLE_MVIS:-true}
export ENABLE_CACHE=${ENABLE_CACHE:-true}
export THEME_COPY_PAGES_INIT=${THEME_COPY_PAGES_INIT:-false}
export ENABLE_SCHEDULER_CODELIST=${ENABLE_SCHEDULER_CODELIST:-true}
export ENABLE_SCHEDULER_RSS=${ENABLE_SCHEDULER_RSS:-true}
export MARKDOWN_AUTO_LINE_BREAKS=${MARKDOWN_AUTO_LINE_BREAKS:-true}
export HOMEPAGE=${HOMEPAGE:-/home}
export SITE_DEFAULT_LANG=${SITE_DEFAULT_LANG:-de}
export TZ=${TZ:-'Europe/Berlin'}

# Source configuration if exists
if [ -f /etc/ingrid/ingrid-portal-ng.conf ]; then
    . /etc/ingrid/ingrid-portal-ng.conf
fi

# Run setup script
$PORTAL_HOME/bin/setup.sh

# Start PHP-FPM
php-fpm

# Start cron service
systemctl start crond

echo "InGrid Portal Next Generation started"
EOF

# Create stop script
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/stop.sh << 'EOF'
#!/bin/sh
# Stop PHP-FPM
killall php-fpm

echo "InGrid Portal Next Generation stopped"
EOF

# Create admin.yaml.template file
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng/usr/share/grav-admin/user/accounts
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/usr/share/grav-admin/user/accounts/admin.yaml.template << 'EOF'
email: admin@example.com
fullname: Admin
title: Administrator
state: enabled
access:
  admin:
    login: true
    super: true
  site:
    login: true
hashed_password: $2y$10$zG2VPZnLwQK.Pu8ht/8QoeAm3Wy2wMYpQpzf1wkXa.ucUC9bIUGOa
EOF

# Create setup script based on entrypoint.sh
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/setup.sh << 'EOF'
#!/bin/sh

PORTAL_HOME=/opt/ingrid/ingrid-portal-ng
cd $PORTAL_HOME

mkdir -p /var/www/"$GRAV_FOLDER"
cd /var/www/"$GRAV_FOLDER"

# exclude user config when it's already there
if [ -d "/var/www/$GRAV_FOLDER/user/config" ]; then
  rsync -rlD --delete \
             --exclude /backup/ \
             --exclude /logs/ \
             --exclude /tmp/ \
             --exclude /user/config/ \
             --exclude /user/accounts/admin.yaml \
             $PORTAL_HOME/usr/share/grav-admin/ /var/www/"$GRAV_FOLDER"
else
  rsync -rlD --delete \
               --exclude /backup/ \
               --exclude /logs/ \
               --exclude /tmp/ \
               --exclude /user/accounts/admin.yaml \
               $PORTAL_HOME/usr/share/grav-admin/ /var/www/"$GRAV_FOLDER"
fi

#####################
# Default admin config
#####################
ADMIN_YAML=/var/www/"$GRAV_FOLDER"/user/accounts/admin.yaml

# Add admin user
if [ ! -f "$ADMIN_YAML" ] && [ -n "$ADMIN_PASSWORD" ]; then
  cp $PORTAL_HOME/usr/share/grav-admin/user/accounts/admin.yaml.template "$ADMIN_YAML"
  yq -i '.email = env(ADMIN_EMAIL)' "$ADMIN_YAML"
  yq -i '.fullname = env(ADMIN_FULL_NAME)' "$ADMIN_YAML"

  hashed_password=$(htpasswd -bnBC 8 "" "$ADMIN_PASSWORD" | grep -oP '\$2[ayb]\$.{56}') \
  yq -i '.hashed_password = env(hashed_password)' "$ADMIN_YAML"
fi

#####################
# Default system config
#####################
SYSTEM_YAML=/var/www/"$GRAV_FOLDER"/user/config/system.yaml

# Add languages
yq -i '.languages.supported = ["de"]' "$SYSTEM_YAML"
yq -i '.languages.default_lang = "de"' "$SYSTEM_YAML"
yq -i '.languages.include_default_lang = false' "$SYSTEM_YAML"
if [ "$ENABLE_LANG_EN" ]; then
  yq -i '.languages.supported = ["de", "en"]' "$SYSTEM_YAML"
fi

# Add theme
THEME="$THEME" \
yq -i '.pages.theme = env(THEME)' "$SYSTEM_YAML"

# Update system markdown
MARKDOWN_AUTO_LINE_BREAKS="$MARKDOWN_AUTO_LINE_BREAKS" \
yq -i '.pages.markdown.auto_line_breaks = env(MARKDOWN_AUTO_LINE_BREAKS)' "$SYSTEM_YAML"

# Update timezone
if [ "$TZ" ]; then
  yq -i '.timezone = env(TZ)' "$SYSTEM_YAML"
else
  yq -i '.timezone = "Europe/Berlin"' "$SYSTEM_YAML"
fi

# Update cache
ENABLE_CACHE="$ENABLE_CACHE" \
yq -i '.cache.enabled = env(ENABLE_CACHE)' "$SYSTEM_YAML"

# Add home
yq -i '.home.alias = env(HOMEPAGE)' "$SYSTEM_YAML"

# copy default cms pages
if [ ! -e /var/www/"$GRAV_FOLDER"/user/config/initialized ] || [ "$THEME_COPY_PAGES_INIT" = "true" ]; then
  if [ -d "/var/www/$GRAV_FOLDER/user/themes/$THEME/pages" ]; then
      echo "Copy theme init pages."
      cp -rf /var/www/"$GRAV_FOLDER"/user/themes/"$THEME"/pages/init/* /var/www/"$GRAV_FOLDER"/user/pages/
    fi
    touch /var/www/"$GRAV_FOLDER"/user/config/initialized
else
    echo "No theme init pages process."
fi

#####################
# Default ingrid grav plugin config
#####################
INGRID_GRAV_YAML=/var/www/"$GRAV_FOLDER"/user/plugins/ingrid-grav/ingrid-grav.yaml

# Update ingrid api
if [ "$INGRID_API" ]; then
  yq -i '.ingrid_api.url = env(INGRID_API)' "$INGRID_GRAV_YAML"
fi

if [ "$CSW_URL" ]; then
  yq -i '.csw.url = env(CSW_URL)' "$INGRID_GRAV_YAML"
fi

if [ "$RDF_URL" ]; then
  yq -i '.rdf.url = env(RDF_URL)' "$INGRID_GRAV_YAML"
fi

#####################
# Default ingrid grav utils plugin config
#####################
INGRID_GRAV_UTILS_YAML=/var/www/"$GRAV_FOLDER"/user/plugins/ingrid-grav-utils/ingrid-grav-utils.yaml

if [ "$CODELIST_API" ]; then
  yq -i '.codelist_api.url = env(CODELIST_API)' "$INGRID_GRAV_UTILS_YAML"
fi

if [ "$CODELIST_USER" ]; then
  yq -i '.codelist_api.user = env(CODELIST_USER)' "$INGRID_GRAV_UTILS_YAML"
fi

if [ "$CODELIST_PASS" ]; then
  yq -i '.codelist_api.pass = env(CODELIST_PASS)' "$INGRID_GRAV_UTILS_YAML"
fi

# Update geo api
if [ "$GEO_API_URL" ]; then
  yq -i '.geo_api.url = env(GEO_API_URL)' "$INGRID_GRAV_UTILS_YAML"
fi

if [ "$GEO_API_USER" ]; then
  yq -i '.geo_api.user = env(GEO_API_USER)' "$INGRID_GRAV_UTILS_YAML"
fi

if [ "$GEO_API_PASS" ]; then
  yq -i '.geo_api.pass = env(GEO_API_PASS)' "$INGRID_GRAV_UTILS_YAML"
fi

#####################
# Active theme config
#####################
INGRID_GRAV_THEME_YAML=/var/www/"$GRAV_FOLDER"/user/themes/"$THEME"/"$THEME".yaml

if [ "$ENABLE_FOOTER_BANNER" ]; then
  yq -i '.footer.banner.enabled = env(ENABLE_FOOTER_BANNER)' "$INGRID_GRAV_THEME_YAML"
fi

#####################
# Default site config
#####################
SITE_YAML=/var/www/"$GRAV_FOLDER"/user/config/site.yaml

SITE_DEFAULT_LANG="$SITE_DEFAULT_LANG" \
yq -i '.default_lang = env(SITE_DEFAULT_LANG)' "$SITE_YAML"

#####################
# Default scheduler config
#####################
SCHEDULER_YAML=/var/www/"$GRAV_FOLDER"/user/config/scheduler.yaml

if [ ! -e "$SCHEDULER_YAML" ]; then
  touch "$SCHEDULER_YAML"
fi

if [ "$ENABLE_SCHEDULER_CODELIST" = "true" ]; then
  yq -i '.status.ingrid-codelist-index = "enabled"' "$SCHEDULER_YAML"
else
  yq -i '.status.ingrid-codelist-index = "disabled"' "$SCHEDULER_YAML"
fi

if [ "$ENABLE_SCHEDULER_RSS" = "true"  ]; then
  yq -i '.status.ingrid-rss-index = "enabled"' "$SCHEDULER_YAML"
else
  yq -i '.status.ingrid-rss-index = "disabled"' "$SCHEDULER_YAML"
fi

mkdir -p assets backup cache images logs tmp

# Install mvis
if [ "$ENABLE_MVIS" = "true" ]; then
  cd /var/www
  curl -o mvis.zip -SL https://nexus.informationgrid.eu/repository/maven-public/de/ingrid/measurement-client/${MVIS_VERSION}/measurement-client-${MVIS_VERSION}.zip && \
  unzip mvis.zip && \
  mv /var/www/measurement-client-"$MVIS_VERSION" /var/www/"$GRAV_FOLDER"/assets/mvis && \
  rm mvis.zip
fi

chown -R apache:apache /var/www/"$GRAV_FOLDER"

# init gravcms scheduler
(echo "* * * * * cd /var/www/$GRAV_FOLDER;/usr/bin/php bin/grav scheduler 1>> /dev/null 2>&1") | crontab -u apache -

# sync on startup
cd /var/www/"$GRAV_FOLDER"
runuser -u apache -- /usr/bin/php bin/grav scheduler -r ingrid-codelist-index
runuser -u apache -- /usr/bin/php bin/grav scheduler -r ingrid-rss-index
EOF

# Make scripts executable
chmod +x %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/start.sh
chmod +x %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/stop.sh
chmod +x %{buildroot}/opt/ingrid/ingrid-portal-ng/bin/setup.sh

# Create sample Apache configuration
mkdir -p %{buildroot}/opt/ingrid/ingrid-portal-ng/conf
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/conf/apache-vhost.conf.sample << 'EOF'
<VirtualHost *:80>
    ServerName portal.example.com
    DocumentRoot /var/www/html

    <Directory /var/www/html>
        AllowOverride All
        Require all granted
    </Directory>

    <FilesMatch \.php$>
        SetHandler "proxy:fcgi://127.0.0.1:9000"
    </FilesMatch>

    ErrorLog /var/log/httpd/ingrid-portal-ng-error.log
    CustomLog /var/log/httpd/ingrid-portal-ng-access.log combined
</VirtualHost>
EOF

# Create sample Nginx configuration
cat > %{buildroot}/opt/ingrid/ingrid-portal-ng/conf/nginx-vhost.conf.sample << 'EOF'
server {
    listen 80;
    server_name portal.example.com;
    root /var/www/html;
    index index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    error_log /var/log/nginx/ingrid-portal-ng-error.log;
    access_log /var/log/nginx/ingrid-portal-ng-access.log;
}
EOF

%files
%defattr(-,root,root,-)
%config(noreplace) %attr(0644,root,root) /etc/systemd/system/ingrid-portal-ng.service
%config(noreplace) %attr(0644,root,root) /etc/profile.d/ingrid-portal-ng.sh
%attr(0755,root,root) /opt/ingrid/ingrid-portal-ng/bin/start.sh
%attr(0755,root,root) /opt/ingrid/ingrid-portal-ng/bin/stop.sh
%attr(0755,root,root) /opt/ingrid/ingrid-portal-ng/bin/setup.sh
/opt/ingrid/ingrid-portal-ng

%pre
# Create apache user if it doesn't exist
getent group apache >/dev/null || groupadd -r apache
getent passwd apache >/dev/null || \
    useradd -r -g apache -d /var/www -s /sbin/nologin \
    -c "Apache web server" apache

# Create directory for configuration
mkdir -p /etc/ingrid

%post
# Create default configuration file if it doesn't exist
if [ ! -f /etc/ingrid/ingrid-portal-ng.conf ]; then
    cat > /etc/ingrid/ingrid-portal-ng.conf << 'EOF'
# InGrid Portal Next Generation Configuration
# Uncomment and modify the variables you want to change

# THEME=ingrid
# GRAV_FOLDER=html
# MVIS_VERSION=2.0.9
# ENABLE_MVIS=true
# ENABLE_CACHE=true
# THEME_COPY_PAGES_INIT=false
# ENABLE_SCHEDULER_CODELIST=true
# ENABLE_SCHEDULER_RSS=true
# MARKDOWN_AUTO_LINE_BREAKS=true
# HOMEPAGE=/home
# SITE_DEFAULT_LANG=de
# TZ=Europe/Berlin
# ADMIN_EMAIL=portal@test.de
# ADMIN_FULL_NAME="The Admin"
# ADMIN_PASSWORD=admin
EOF
fi

# Download and install yq if not present
if ! command -v yq &> /dev/null; then
    echo "Installing yq..."
    YQ_VERSION="v4.45.1"
    mkdir -p /tmp/yq-install
    cd /tmp/yq-install
    wget -q https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
    chmod +x yq_linux_amd64
    mv yq_linux_amd64 /usr/local/bin/yq
    cd /
    rm -rf /tmp/yq-install
    echo "yq installed successfully."
fi

# Enable and start the service
systemctl daemon-reload
systemctl enable ingrid-portal-ng.service
echo "InGrid Portal Next Generation has been installed."
echo "Edit /etc/ingrid/ingrid-portal-ng.conf to configure the application."
echo "Run 'systemctl start ingrid-portal-ng.service' to start the service."
echo ""
echo "Web Server Configuration:"
echo "------------------------"
echo "Sample configuration files for Apache and Nginx are available at:"
echo "  - Apache: /opt/ingrid/ingrid-portal-ng/conf/apache-vhost.conf.sample"
echo "  - Nginx:  /opt/ingrid/ingrid-portal-ng/conf/nginx-vhost.conf.sample"
echo ""
echo "For Apache, copy and modify the sample configuration to /etc/httpd/conf.d/ingrid-portal-ng.conf"
echo "For Nginx, copy and modify the sample configuration to /etc/nginx/conf.d/ingrid-portal-ng.conf"
echo ""
echo "Remember to restart your web server after configuration:"
echo "  - Apache: systemctl restart httpd"
echo "  - Nginx:  systemctl restart nginx"

%preun
if [ $1 -eq 0 ]; then
    # Package removal, not upgrade
    systemctl --no-reload disable ingrid-portal-ng.service > /dev/null 2>&1 || :
    systemctl stop ingrid-portal-ng.service > /dev/null 2>&1 || :
fi

%postun
if [ $1 -ge 1 ]; then
    # Package upgrade, not uninstall
    systemctl daemon-reload >/dev/null 2>&1 || :
    systemctl try-restart ingrid-portal-ng.service >/dev/null 2>&1 || :
fi

%changelog
* @BUILD_DATE@ Jenkins <jenkins@wemove.com> - @RPM_VERSION@-@RPM_RELEASE@
- Automated build from Jenkins
